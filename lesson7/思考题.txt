1. add_member 首先是通过binary_search确定了元素应该插入的位置，binary_search如果找到这个元素就会返回匹配的位置，如果没找到就会返回这个元素应该插入的位置。
这一步的操作是复杂度是O（logn）,然后在指定位置插入元素并把其他元素往右移复杂度为O(n).所以我觉得这个add_member复杂度为O（n）。

2. 这个pallet有一个member列表，一个核心member，其操作的复杂度高，所以只能用于一旦生成成员变动不大的场景，所以第二个不合适，第一和第三个场景都可以。

